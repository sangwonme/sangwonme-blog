{"version":3,"file":"component---src-pages-publication-tsx-5c096ee4f75ff2c8040a.js","mappings":"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","sources":["webpack://sangwonme-io/./src/components/_Common/SubSectionTitle.tsx","webpack://sangwonme-io/./src/components/PublicationPageRelated/PaperCardIcon.tsx","webpack://sangwonme-io/./src/components/PublicationPageRelated/PaperCard.tsx","webpack://sangwonme-io/./src/pages/publication.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport './SubSectionTitle.scss';\n\ntype Props = {\n    children: React.ReactNode;\n};\n\nconst SubSectionTitle = ({children} : Props) => {\n    return (\n      <div className='subsection-container'>\n          <div className='subsection-square'/>\n          <p className='subsection-title'> {children} </p>\n      </div>\n    );\n}\n \nexport default SubSectionTitle;","import * as React from 'react';\nimport { IconBaseProps } from 'react-icons';\n\n\nimport './PaperCardIcon.scss'\n\ninterface PaperCardIconProps {\n    icon: React.ComponentType<IconBaseProps>;\n    item: string;\n    data: string;\n    setShowPopup: React.Dispatch<React.SetStateAction<boolean>>\n}\n  \nconst PaperCardIcon: React.FC<PaperCardIconProps> = ({ icon: IconComponent, item, data, setShowPopup }) => {\n\n    // open link in new tab\n    const openLink = () => {\n        window.open(data, \"_blank\");\n    };\n\n    // copy Bibtex\n    const copyBibtex: React.MouseEventHandler<HTMLDivElement> = (event) => {\n        console.log('bibTex Clicked!')\n        // Copy the data to the clipboard\n        navigator.clipboard.writeText(data)\n            .then(() => {\n            // Show the popup\n            setShowPopup(true);\n\n            // Hide the popup after 2 seconds\n            setTimeout(() => {\n                setShowPopup(false);\n            }, 2000);\n        })\n            .catch((err) => {\n            console.error('Failed to copy text: ', err);\n        });\n    };\n\n    // onClickEvent\n    const onClickEvent = (item=='bibtex') ? copyBibtex : (item=='award') ? ()=>{} : openLink;\n\n    return (\n        <>\n        {\n            data !== \"\" && \n            (\n            <div className='papercard-icon-wrapper' onClick={onClickEvent}>\n                <div className='papercard-icon-icon'><IconComponent className='fa-icon'/></div>\n                <p className='papercard-icon-desc'>{item==='award'? data : item}</p>\n            </div>\n            )\n        }\n        </>\n    );\n}\n\nexport default PaperCardIcon;\n\n  ","import * as React from 'react';\n\nimport { useState } from 'react';\n\nimport {FaQuoteLeft, FaAward, FaFilePdf, FaVideo, FaImage} from 'react-icons/fa';\nimport { FaCircleCheck } from 'react-icons/fa6';\n\nimport './PaperCard.scss';\nimport PaperCardIcon from './PaperCardIcon';\n\n// react-icons\nconst itemToIcon = {\n  'award': FaAward,\n  'pdf': FaFilePdf,\n  'bibtex': FaQuoteLeft,\n  'video': FaVideo,\n  'slide': FaImage\n}\n\n// props\ninterface PaperCardProps{\n  title: string;\n  authors: [string];\n  thumbnail: string;\n  venue: string;\n  // icons\n  award: string;\n  pdf: string;\n  bibtex: string;\n  video: string;\n  slide: string;\n  // ---\n  category: [string];\n}\n\n// papercard\nconst PaperCard = ({\n  authors,\n  thumbnail,\n  bibtex,\n  award,\n  venue,\n  video,\n  slide,\n  title,\n  pdf,\n  category\n}:PaperCardProps) => {\n\n  // show popup \n  const [showPopup, setShowPopup] = useState<boolean>(false);\n  const setShowPopupProp = showPopup ? ()=>{} : setShowPopup;\n\n  console.log(showPopup);\n\n  return (<>\n    <div className='papercard-container'>\n\n\n      <img className='papercard-thumbnail' src={thumbnail}/>\n\n      <div className='papercard-info'>\n        <div className='papercard-icons'>\n          <PaperCardIcon setShowPopup={setShowPopupProp} icon={itemToIcon['award']} item='award' data={award}/>\n          <PaperCardIcon setShowPopup={setShowPopupProp} icon={itemToIcon['pdf']} item='pdf' data={pdf}/>\n          <PaperCardIcon setShowPopup={setShowPopupProp} icon={itemToIcon['bibtex']} item='bibtex' data={bibtex}/>\n          <PaperCardIcon setShowPopup={setShowPopupProp} icon={itemToIcon['video']} item='video' data={video}/>\n          <PaperCardIcon setShowPopup={setShowPopupProp} icon={itemToIcon['slide']} item='slide' data={slide}/>\n        </div>\n        <p className='papercard-title'>{title}</p>\n        <p className='papercard-authors'>\n          {\n            authors.join(\"ã…¤\")\n          }\n        </p>\n        <p className='papercard-venue'>{venue}</p>\n      </div>\n    </div>\n\n    {/* copied pop-up */}\n    {\n      showPopup &&\n      <div className='absolute-screen'>\n        <div className='popup-container'>\n          <div className='popup-background'>\n            <FaCircleCheck className='fa-icon'/>\n            <p className='popup-text'>BibTeX copied to clipboard..!</p>\n          </div>\n        </div>\n      </div>\n\n    }\n  </>);\n}\n\nexport default PaperCard","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport PaperCard from '../components/PublicationPageRelated/PaperCard'\nimport Layout from '../components/LayoutRelated/Layout'\nimport SubSectionTitle from '../components/_Common/SubSectionTitle'\n\nconst PublicationPage = ({ data }: any) => {\n  const publicationData = data.allMarkdownRemark.nodes;\n\n  // 1. Sort publications by date (newest first)\n  const sortedPublications = [...publicationData].sort((a, b) => {\n    return new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime();\n  });\n\n  // 2. Group publications by year\n  const publicationsByYear: { [year: string]: any[] } = {};\n\n  sortedPublications.forEach((pub) => {\n    const year = new Date(pub.frontmatter.date).getFullYear();\n    if (!publicationsByYear[year]) {\n      publicationsByYear[year] = [];\n    }\n    publicationsByYear[year].push(pub);\n  });\n\n  return (\n    <>\n      <Layout title='Publication'>\n        {Object.keys(publicationsByYear).sort((a, b) => Number(b) - Number(a)).map((year) => (\n          <div key={year}>\n            <SubSectionTitle>{year}</SubSectionTitle>\n            {publicationsByYear[year].map((pub, idx) => (\n              <PaperCard\n                key={idx}\n                authors={pub.frontmatter.authors}\n                bibtex={pub.frontmatter.bibtex}\n                award={pub.frontmatter.award}\n                thumbnail={pub.frontmatter.thumbnail}\n                venue={pub.frontmatter.venue}\n                video={pub.frontmatter.video}\n                slide={pub.frontmatter.slide}\n                title={pub.frontmatter.title}\n                pdf={pub.frontmatter.pdf}\n                category={pub.frontmatter.category}\n              />\n            ))}\n          </div>\n        ))}\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\nquery MyQuery {\n  allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/publication/\"}}) {\n    nodes {\n      frontmatter {\n        authors\n        date\n        bibtex\n        award\n        thumbnail\n        venue\n        video\n        slide\n        title\n        pdf\n        category\n      }\n    }\n  }\n}\n`\n\nexport const Head = () => <title>Publications</title>\n\nexport default PublicationPage;\n"],"names":["_ref","children","React","className","icon","IconComponent","item","data","setShowPopup","onClickEvent","event","console","log","navigator","clipboard","writeText","then","setTimeout","catch","err","error","openLink","window","open","onClick","itemToIcon","FaAward","FaFilePdf","FaQuoteLeft","FaVideo","FaImage","authors","thumbnail","bibtex","award","venue","video","slide","title","pdf","category","showPopup","useState","setShowPopupProp","src","PaperCardIcon","join","FaCircleCheck","Head","publicationData","allMarkdownRemark","nodes","sortedPublications","_toConsumableArray","sort","a","b","Date","frontmatter","date","getTime","publicationsByYear","forEach","pub","year","getFullYear","push","Layout","Object","keys","Number","map","key","SubSectionTitle","idx","PaperCard"],"sourceRoot":""}